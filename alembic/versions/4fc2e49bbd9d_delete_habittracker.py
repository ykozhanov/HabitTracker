"""Delete habittracker

Revision ID: 4fc2e49bbd9d
Revises: 3fc849d54093
Create Date: 2024-11-07 10:13:05.042555

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4fc2e49bbd9d"
down_revision: Union[str, None] = "3fc849d54093"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### handlers_commands auto generated by Alembic - please adjust! ###
    op.drop_table("habittracker")
    op.add_column("habits", sa.Column("remind_time", sa.Time(), nullable=False))
    op.add_column("habits", sa.Column("last_time_check", sa.DateTime(), nullable=False))
    op.add_column("habits", sa.Column("count_repeat", sa.Integer(), nullable=True))
    # ### end Alembic handlers_commands ###


def downgrade() -> None:
    # ### handlers_commands auto generated by Alembic - please adjust! ###
    op.drop_column("habits", "count_repeat")
    op.drop_column("habits", "last_time_check")
    op.drop_column("habits", "remind_time")
    op.create_table(
        "habittracker",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("habit_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "remind_time", postgresql.TIME(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "last_time_check",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("count_repeat", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["habit_id"], ["habits.id"], name="habittracker_habit_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="habittracker_pkey"),
    )
    # ### end Alembic handlers_commands ###
